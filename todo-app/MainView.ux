<App>
	<DockPanel>

		<Font ux:Global="RobotoRegular" File="Roboto-Regular.ttf" />

		<Panel ux:Class="BlankButton" HitTestMode="LocalBoundsAndChildren" />

		<Text ux:Class="SmallText" FontSize="14" Font="RobotoRegular" Color="#999" />

		<StatusBarBackground Dock="Top"/>
		<BottomBarBackground Dock="Bottom"/>
		<JavaScript File="MainView.js" />
		<DockPanel Margin="20" Background="White">
			<Rectangle Layer="Background">
				<Stroke Width="1" Brush="#ddd"/>
			</Rectangle>

			<StackPanel Dock="Top">
				<Grid Columns="auto,1*,auto">
					<BlankButton Width="60" Height="60" Clicked="{toggleAll}">
						<Panel Layer="Background">
							<Panel Height="1" Width="16" Background="#ddd">
								<Rotation Degrees="45"/>
								<Translation X="-0.5" RelativeTo="Size"/>
							</Panel>
							<Panel Height="1" Width="16" Background="#ddd">
								<Rotation Degrees="-45"/>
								<Translation X="0.5" RelativeTo="Size"/>
							</Panel>
							<Translation Y="8"/>
						</Panel>
					</BlankButton>
					<TextInput Value="{titleInput}" PlaceholderText="Enter task here" PlaceholderColor="#ccc" TextColor="#888" FontSize="18" TextWrapping="NoWrap" Alignment="CenterLeft" MinWidth="100" Margin="10,10,15,10" />

					<!-- snippet-begin:AddItemButton -->
					<BlankButton Clicked="{addItem}" Width="60" Height="60" HitTestMode="LocalBoundsAndChildren">
						<Panel Layer="Background">
							<Panel Height="1" Width="30" Background="#ddd"/>
							<Panel Width="1" Height="30" Background="#ddd"/>
						</Panel>
					</BlankButton>
					<!-- snippet-end -->
				</Grid>
				<Rectangle Height="1" Color="#ddd"/>
			</StackPanel>
			<ScrollView>
				<StackPanel>
					<!-- snippet-begin:Each -->
					<Each Items="{todoList}">
						<Grid ux:Name="itemPanel" Columns="auto,1*,auto" Alignment="Top" Height="60" Opacity="1" BoxSizing="Limit" LimitHeight="100%">
							<!-- strip-begin: -->
							<WhileTrue Value="{hidden}">
								<Change itemPanel.LimitHeight="0" Duration="0.4" Easing="CircularInOut"/>
								<Change itemPanel.Opacity="0" Duration="0.25"  Easing="CircularInOut"/>
							</WhileTrue>
							<!-- strip-end -->

							<BlankButton Clicked="{toggleItem}" Alignment="CenterLeft" Width="60" Height="60">
								<!-- strip-begin: ... this button toggles an items checked state ... -->
								<Panel ux:Name="checkedIcon" Opacity="0">
									<Rectangle ux:Class="CheckedIconPart">
										<Stroke Color="#50ac9a" Width="1" />
									</Rectangle>

									<CheckedIconPart Height="1" Width="6">
										<Rotation Degrees="45"/>
										<Translation X="-0.5" RelativeTo="Size"/>
									</CheckedIconPart>
									<CheckedIconPart Height="1" Width="14">
										<Rotation Degrees="-45"/>
										<Translation X="0.5" RelativeTo="Size"/>
									</CheckedIconPart>
									<Translation Y="0.1" X="-0.05" RelativeTo="Size"/>
								</Panel>

								<Circle Layer="Background" HitTestMode="LocalVisualAndChildren" Width="32" Height="32" Color="#fff">
									<Stroke Width="1">
										<SolidColor ux:Name="checkedCircleColor" Color="#ddd"/>
									</Stroke>
								</Circle>
								<!-- strip-end -->
							</BlankButton>

							<Panel>
								<Panel Alignment="Left">
									<Rectangle ux:Name="textLine" Height="1" Opacity="0" Margin="30,0,0,0" Color="#bbb"/>
									<Text ux:Name="itemText" Value="{title}" Alignment="CenterLeft" TextAlignment="Left" Margin="30,0,0,0" FontSize="20" Color="#999" TextWrapping="Wrap" />
								</Panel>
							</Panel>


							<WhileTrue Value="{checked}">
								<Change checkedCircleColor.Color="#50ac9a" Duration="0.3"/>
								<Change checkedIcon.Opacity="1" Duration="0.3"/>
								<Change textLine.Opacity="1" Duration="0.3"/>
								<Change itemText.Color="#ddd" Duration="0.3"/>
							</WhileTrue>

							<BlankButton Alignment="CenterRight" Clicked="{deleteItem}" Width="60" Height="60"
									HitTestMode="LocalBoundsAndChildren">
								<!-- strip-begin:... the delete button ... -->
								<Panel Layer="Background" Height="16">
									<Panel Width="20" Height="1" Background="#ddd">
										<Rotation Degrees="45"/>
									</Panel>
									<Panel Width="20" Height="1" Background="#ddd">
										<Rotation Degrees="-45"/>
									</Panel>
								</Panel>
								<!-- strip-end -->
							</BlankButton>

							<LayoutAnimation>
								<Move RelativeTo="LayoutChange" Y="1" Duration="0.6" Easing="BounceIn"/>
							</LayoutAnimation>
							<AddingAnimation>
								<Move RelativeTo="Size" X="1" Duration="0.3" Easing="CircularInOut" />
							</AddingAnimation>
							<RemovingAnimation>
								<Move RelativeTo="Size" X="1" Duration="0.3" Easing="CircularInOut" />
							</RemovingAnimation>

							<Rectangle Height="1" ColumnSpan="3" Row="0" Alignment="Bottom" Color="#ddd"/>
						</Grid>
					</Each>
					<!-- snippet-end -->
				</StackPanel>
			</ScrollView>

			<StackPanel Dock="Bottom">
				<Rectangle Height="1" Color="#ddd"/>

				<Panel Padding="0,8">
					<!-- snippet-begin:MultiLayout -->
					<MultiLayoutPanel ux:Name="multiLayout">
						<GridLayout Columns="1*,1*,1.5*"/>
						<BlankButton ux:Name="allButton" Clicked="{showAll}">
							<Panel Alignment="Center">
								<SmallText Value="All" TextAlignment="Center"/>
								<Placeholder>
									<Rectangle ux:Name="indicator" Column="0" Row="0" CornerRadius="3" Margin="-10,-5,-10,-5">
										<LayoutAnimation>
											<Move RelativeTo="LayoutChange" X="1" Duration="0.5" Easing="BackIn"/>
											<Resize RelativeTo="LayoutChange" Duration="0.5" Easing="BackIn"/>
										</LayoutAnimation>
										<Stroke Width="1" Brush="#E7D9DE"/>
									</Rectangle>
								</Placeholder>
							</Panel>

							<Clicked>
								<Set multiLayout.LayoutElement="allButton" />
							</Clicked>
						</BlankButton>
						<BlankButton ux:Name="activeButton" Clicked="{showActive}">
							<Panel Alignment="Center">
								<SmallText TextAlignment="Center" Value="Active" />
								<Placeholder Target="indicator"/>
							</Panel>
							<Clicked>
								<Set multiLayout.LayoutElement="activeButton"/>
							</Clicked>
						</BlankButton>
						<BlankButton ux:Name="completedButton" Clicked="{showCompleted}">
							<Panel Alignment="Center">
								<SmallText TextAlignment="Center" Value="Completed"/>
								<Placeholder Target="indicator"/>
							</Panel>
							<Clicked>
								<Set multiLayout.LayoutElement="completedButton"/>
							</Clicked>
						</BlankButton>
					</MultiLayoutPanel>
					<!-- snippet-end -->
				</Panel>
				<Panel>

					<!-- snippet-begin:RemainingTextUX -->
					<SmallText Value="{remainingText}" Margin="10" Alignment="Left"/>
					<!-- snippet-end -->

					<!-- snippet-begin:ClearCompletedButton -->
					<Panel ux:Name="clearCompletedButton" Alignment="TopRight" Clicked="{clearCompleted}"  Margin="10" IsEnabled="{canClearCompleted}">
						<Text Value="Clear completed" FontSize="14" Color="#999" Margin="10,0,10,0" />
						<WhileDisabled>
							<Change clearCompletedButton.Opacity="0" Duration="0.3"/>
						</WhileDisabled>
					</Panel>
					<!-- snippet-end -->


					<Rectangle Height="1" Alignment="Top" Color="#ddd"/>
				</Panel>
			</StackPanel>
		</DockPanel>

		<!-- Bottom rectangles -->
		<Rectangle Margin="25" Color="#fff">
			<Translation Y="10"/>
			<Stroke Width="1" Brush="#ddd"/>
		</Rectangle>
		<Rectangle Margin="30" Color="#fff">
			<Translation Y="20"/>
			<Stroke Width="1" Brush="#ddd"/>
		</Rectangle>
	</DockPanel>

</App>
